shiny::runApp('A:/Shiny')
install.packages("rJava")
library(rJava)
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
tails(Fecha)
tail(Fecha)
tail(Fecha)
Fecha
Fecha <- dep()$Fecha[(1000 + 2*as.numeric(input$Hor)):(length(dep()$Fecha))]
tail(Fecha)
if (as.integer(input$Hor) == 1) {
inc = 0#Para VaR de 1 dia siempre habra problemas en las proyecciones de fin de semana
} else if (as.integer(input$Hor) == 5) {
inc = 2#Para VaR de 5 dias se requiere agregar 2 dias para que el forecast sea de 7 dias calendario
} else {
inc = 8
}
Fecha[(length(Fecha)+1)] <- Fecha[length(Fecha)]+days(1)+inc
tail(Fecha)
Fecha[(length(Fecha)+2)] <- Fecha[length(Fecha)]+days(2)+inc
tail(Fecha)
shiny::runApp('A:/Shiny')
tail(Fecha)
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
shiny::runApp('A:/Shiny')
install.packages('devtools')
library(devtools)
shiny::runApp('A:/Shiny/App Final')
shiny::runApp('A:/Shiny/App Final')
shinyapps::setAccountInfo(name='finanview', token='F1CEBC9E9026B0AF6340645AB697A442', secret='ILxAjRqe+/bkQnYBK1H3yFNcuDbAeL1imo+fSjLY')
library(rsconnect)
deployApp()
shiny::runApp('A:/Shiny/App Final')
shinyapps::setAccountInfo(name='finanview', token='F1CEBC9E9026B0AF6340645AB697A442', secret='ILxAjRqe+/bkQnYBK1H3yFNcuDbAeL1imo+fSjLY')
install.packages("openxls")
shiny::runApp('B:/Shiny/App Final')
load("C:/Users/Edv82/Google Drive/GestiÃ³n/Data Bancos/Balances Bancarios 2002-07_2015-11_Filtro21.RData")
View(Datos_Bancos)
install.packages("rCharts")
install.packages("rCharts")
hist(rnorm(100)*input$1+input$50)
hist(rnorm(100)*2+50)
hist(rnorm(1000)*2+50)
hist(rnorm(10000)*2+50)
?hist
x <- (rnorm(10000)*2+50)
library(ggplot2)
m <- ggplot(x, aes(x = x))
x <- as.data.frame(x)
m <- ggplot(x, aes(x = x))
m <- ggplot(x, aes(x = x)) + geom_density()
m
x <- as.data.frame((rnorm(100)*2+50))
m <- ggplot(x, aes(x = x)) + geom_density()
m
x <- as.data.frame((rnorm(1000)*2+50))
m <- ggplot(x, aes(x = x)) + geom_density()
m
m
View(x)
names(x) <- "x"
m <- ggplot(x, aes(x = x)) + geom_density()
m
x <- as.data.frame((rnorm(100)*2+50))
names(x) <- "x"
m <- ggplot(x, aes(x = x)) + geom_density()
m
qnorm(0,5)
qnorm(0.5)
qnorm(0.99)
m <- ggplot(x, aes(x = x)) + geom_density() + geom_vline(xintercept = mean(x$x)+sd(s$x)*qnorm(0.99))
mean(x$x)+sd(s$x)*qnorm(0.99)
mean(x)
View(x)
mean(x$x)
m <- ggplot(x, aes(x = x)) + geom_density() + geom_vline(xintercept = mean(x$x)+sd(x$x)*qnorm(0.99))
m
m <- ggplot(x, aes(x = x)) + geom_density() + geom_vline(xintercept = mean(x$x)+sd(x$x)*qnorm(0.99)) + ggtitle("New plot title")
m
setwd("E:/Edv82/OneDrive/Coursera/Data Science Specialization/09-Developing Data Products/App")
library(shiny)
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
mean(x)
class(x)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shinyapps::setAccountInfo(name='finanview', token='F1CEBC9E9026B0AF6340645AB697A442', secret='ILxAjRqe+/bkQnYBK1H3yFNcuDbAeL1imo+fSjLY')
setwd("E:/Edv82/OneDrive/Coursera/Data Science Specialization/09-Developing Data Products/App")
deployApp()
library(shiny)
deployApp()
?deployApp
deployApp()
